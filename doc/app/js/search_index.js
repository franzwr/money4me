var search_data = {"index":{"searchIndex":["api","accountcontroller","bankaccountcontroller","cuentacontroller","empresacontroller","pagocontroller","rubrocontroller","account","admin","applicationcontroller","applicationhelper","authorizationcontroller","client","companyuser","cuenta","detalle","empresa","empresarubro","pago","remotebase","rubro","user","usermailer","account_params()","activation_email()","admin_params()","client_params()","companies()","company_user_params()","configure_permitted_parameters()","create()","create()","create()","create()","create()","cuenta_params()","destroy()","destroy()","destroy()","destroy()","destroy()","empresa_params()","fecha_limite_after_fecha_registro()","funds()","index()","index()","index()","index()","index()","index()","login()","logout()","multi_transfer()","pago_params()","pago_params()","pagos()","password_reset()","password_reset_email()","payment_email()","recover()","rollback_transfer()","rubro_params()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","set_reset_password_token()","show()","show()","show()","show()","show()","show()","sign_up()","transfer()","unpaid_bills()","update()","update()","update()","update()","update()","users()","validate_password_reset()","welcome_email()","readme"],"longSearchIndex":["api","api::accountcontroller","api::bankaccountcontroller","api::cuentacontroller","api::empresacontroller","api::pagocontroller","api::rubrocontroller","account","admin","applicationcontroller","applicationhelper","authorizationcontroller","client","companyuser","cuenta","detalle","empresa","empresarubro","pago","remotebase","rubro","user","usermailer","api::accountcontroller#account_params()","usermailer#activation_email()","authorizationcontroller#admin_params()","authorizationcontroller#client_params()","admin#companies()","authorizationcontroller#company_user_params()","applicationcontroller#configure_permitted_parameters()","api::accountcontroller#create()","api::cuentacontroller#create()","api::empresacontroller#create()","api::pagocontroller#create()","api::rubrocontroller#create()","api::cuentacontroller#cuenta_params()","api::accountcontroller#destroy()","api::cuentacontroller#destroy()","api::empresacontroller#destroy()","api::pagocontroller#destroy()","api::rubrocontroller#destroy()","api::empresacontroller#empresa_params()","cuenta#fecha_limite_after_fecha_registro()","account#funds()","api::accountcontroller#index()","api::cuentacontroller#index()","api::empresacontroller#index()","api::pagocontroller#index()","api::rubrocontroller#index()","applicationcontroller#index()","authorizationcontroller#login()","authorizationcontroller#logout()","api::bankaccountcontroller#multi_transfer()","api::bankaccountcontroller#pago_params()","api::pagocontroller#pago_params()","companyuser#pagos()","authorizationcontroller#password_reset()","usermailer#password_reset_email()","usermailer#payment_email()","authorizationcontroller#recover()","api::bankaccountcontroller#rollback_transfer()","api::rubrocontroller#rubro_params()","admin#serializable_hash()","client#serializable_hash()","companyuser#serializable_hash()","user#serializable_hash()","authorizationcontroller#set_reset_password_token()","api::accountcontroller#show()","api::bankaccountcontroller#show()","api::cuentacontroller#show()","api::empresacontroller#show()","api::pagocontroller#show()","api::rubrocontroller#show()","authorizationcontroller#sign_up()","api::bankaccountcontroller#transfer()","client#unpaid_bills()","api::accountcontroller#update()","api::cuentacontroller#update()","api::empresacontroller#update()","api::pagocontroller#update()","api::rubrocontroller#update()","admin#users()","authorizationcontroller#validate_password_reset()","usermailer#welcome_email()",""],"info":[["API","","API.html","",""],["API::AccountController","","API/AccountController.html","","<p>account_controller.rb\n<p>Controller class for all Account related actions.\n"],["API::BankAccountController","","API/BankAccountController.html","","<p>bank_account_controller.rb\n<p>Controller for all Bank API related actions.\n"],["API::CuentaController","","API/CuentaController.html","","<p>cuenta_controller.rb\n<p>Controller class for all Bills (Cuentas) related actions.\n"],["API::EmpresaController","","API/EmpresaController.html","","<p>empresa_controller.rb\n<p>Defines all Company related API tasks.\n"],["API::PagoController","","API/PagoController.html","","<p>pago_controller.rb\n<p>Defines al Pago related API tasks.\n"],["API::RubroController","","API/RubroController.html","","<p>rubro_controller.rb\n<p>Defines all Rubro related API tasks.\n"],["Account","","Account.html","","<p>account.rb\n<p>Account class, inherits from ActiveRecord::Base. Abstraction of the bank\naccounts.\n"],["Admin","","Admin.html","","<p>admin.rb\n<p>Admin class, inherits from User (Single Table Inheritance). Abstracts the\nadmin user.\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AuthorizationController","","AuthorizationController.html","","<p>authorization_controller.rb\n<p>Controller class for all devise related actions.\n"],["Client","","Client.html","","<p>client.rb\n<p>Client class, inherits from User (Single Table Inheritance). Abstracts the\nmain client user. …\n"],["CompanyUser","","CompanyUser.html","","<p>company_user.rb\n<p>CompanyUser class. Inherits from User (Single Table Inheritance), and\nrepresents the user …\n"],["Cuenta","","Cuenta.html","","<p>cuenta.rb\n<p>Payment (Cuenta) class, inherits from RemoteBase. Abstraction of the\n&#39;Cuenta&#39; table …\n"],["Detalle","","Detalle.html","","<p>detalle.rb\n<p>Details (Detalle) class, inherits from RemoteBase. Abstractions of the\n&#39;Detalle&#39; table …\n"],["Empresa","","Empresa.html","","<p>empresa.rb\n<p>Company (Empresa) class, inherits from RemoteBase. Abstraction of the\n&#39;Empresa&#39; table …\n"],["Empresarubro","","Empresarubro.html","","<p>empresarubro.rb\n<p>EmpresaRubro class, inherits from RemoteBase. Abstraction of the\n&#39;Empresa_Rubro&#39; …\n"],["Pago","","Pago.html","","<p>pago.rb\n<p>Payment (Pago) class, inherits from RemoteBase. Abstraction of the\n&#39;pagos&#39; table from …\n"],["RemoteBase","","RemoteBase.html","","<p>remote_base.rb\n<p>RemoteBase class, inherits from ActiveRecord::Base. This class is abstract,\nand its used …\n"],["Rubro","","Rubro.html","","<p>rubro.rb\n<p>Entry (Rubro) class, inherits from RemoteBase. Abstraction of the\n&#39;rubros&#39; table from …\n"],["User","","User.html","","<p>user.rb\n<p>Base class for all users. Defines devise modules.\n"],["UserMailer","","UserMailer.html","","<p>user_mailer.rb\n<p>Defines all user related mailer actions.\n"],["account_params","API::AccountController","API/AccountController.html#method-i-account_params","()","<p>Permited params to bill creation.\n"],["activation_email","UserMailer","UserMailer.html#method-i-activation_email","(user)","<p>Notifies company activation and gives instructions.\n"],["admin_params","AuthorizationController","AuthorizationController.html#method-i-admin_params","()",""],["client_params","AuthorizationController","AuthorizationController.html#method-i-client_params","()","<p>Permitted params for all user roles.\n"],["companies","Admin","Admin.html#method-i-companies","()","<p>Admin sees all companies.\n"],["company_user_params","AuthorizationController","AuthorizationController.html#method-i-company_user_params","()",""],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()",""],["create","API::AccountController","API/AccountController.html#method-i-create","()","<p>Creates a bill.\n"],["create","API::CuentaController","API/CuentaController.html#method-i-create","()","<p>Creates a bill.\n"],["create","API::EmpresaController","API/EmpresaController.html#method-i-create","()","<p>Creates a company and returns a JSON object with the new company.\n"],["create","API::PagoController","API/PagoController.html#method-i-create","()","<p>Creates a new Pago and returns it.\n"],["create","API::RubroController","API/RubroController.html#method-i-create","()","<p>Creates a new Rubro and returns it.\n"],["cuenta_params","API::CuentaController","API/CuentaController.html#method-i-cuenta_params","()","<p>Permited params to bill creation.\n"],["destroy","API::AccountController","API/AccountController.html#method-i-destroy","()","<p>Destroys an account. This actions can&#39;t be performed if the bill has a\npayment associated.\n"],["destroy","API::CuentaController","API/CuentaController.html#method-i-destroy","()","<p>Destroys a bill. This actions can&#39;t be performed if the bill has a\npayment associated.\n"],["destroy","API::EmpresaController","API/EmpresaController.html#method-i-destroy","()","<p>Eliminates a company and returns an empty JSON object.\n"],["destroy","API::PagoController","API/PagoController.html#method-i-destroy","()",""],["destroy","API::RubroController","API/RubroController.html#method-i-destroy","()","<p>Destroys a Rubro.\n"],["empresa_params","API::EmpresaController","API/EmpresaController.html#method-i-empresa_params","()","<p>Required and permitted HTTP params.\n"],["fecha_limite_after_fecha_registro","Cuenta","Cuenta.html#method-i-fecha_limite_after_fecha_registro","()",""],["funds","Account","Account.html#method-i-funds","()","<p>Retrieves available funds from the bank API.\n"],["index","API::AccountController","API/AccountController.html#method-i-index","()","<p>Not necessary\n"],["index","API::CuentaController","API/CuentaController.html#method-i-index","()","<p>Main action. Shows all bills, with all meaningfull relationships. If a\nfolio is provided,  acts as the …\n"],["index","API::EmpresaController","API/EmpresaController.html#method-i-index","()","<p>Returns a JSON hash with all companies.\n"],["index","API::PagoController","API/PagoController.html#method-i-index","()","<p>Returns all Pagos.\n"],["index","API::RubroController","API/RubroController.html#method-i-index","()","<p>Returns all Rubros\n"],["index","ApplicationController","ApplicationController.html#method-i-index","()",""],["login","AuthorizationController","AuthorizationController.html#method-i-login","()","<p>Signs In a user. Renders JSON containing the signed in resource.\n"],["logout","AuthorizationController","AuthorizationController.html#method-i-logout","()","<p>Signs out any kind of user.\n"],["multi_transfer","API::BankAccountController","API/BankAccountController.html#method-i-multi_transfer","()","<p>Performs multiple money transfer and stores the details as a Pago instance.\n"],["pago_params","API::BankAccountController","API/BankAccountController.html#method-i-pago_params","()","<p>Permited params for payment creation.\n"],["pago_params","API::PagoController","API/PagoController.html#method-i-pago_params","()",""],["pagos","CompanyUser","CompanyUser.html#method-i-pagos","()",""],["password_reset","AuthorizationController","AuthorizationController.html#method-i-password_reset","()","<p>Changes the password and clears tokens.\n"],["password_reset_email","UserMailer","UserMailer.html#method-i-password_reset_email","(user)",""],["payment_email","UserMailer","UserMailer.html#method-i-payment_email","(pago, email)","<p>Payment receipt email.\n"],["recover","AuthorizationController","AuthorizationController.html#method-i-recover","()","<p>Updates the client recovery status, so its visible for admins. Performs the\nrecaptcha and other verifications. …\n"],["rollback_transfer","API::BankAccountController","API/BankAccountController.html#method-i-rollback_transfer","(uris)","<p>Recursive method that performs a money transfer for each bill in\n&#39;uris&#39;, canceling the payment. …\n"],["rubro_params","API::RubroController","API/RubroController.html#method-i-rubro_params","()",""],["serializable_hash","Admin","Admin.html#method-i-serializable_hash","(options=nil)","<p>Includes type field in JSON response.\n"],["serializable_hash","Client","Client.html#method-i-serializable_hash","(options=nil)","<p>Includes type field in JSON response.\n"],["serializable_hash","CompanyUser","CompanyUser.html#method-i-serializable_hash","(options=nil)","<p>Includes type field in JSON response.\n"],["serializable_hash","User","User.html#method-i-serializable_hash","(options=nil)","<p>Includes type field in JSON response.\n"],["set_reset_password_token","AuthorizationController","AuthorizationController.html#method-i-set_reset_password_token","()","<p>Sets the reset password token field so it becomes visible to admins.\n"],["show","API::AccountController","API/AccountController.html#method-i-show","()","<p>Mirror external API for same-origin policy purposes.\n"],["show","API::BankAccountController","API/BankAccountController.html#method-i-show","()","<p>Forwards the Bank API response to client application as JSON.\n"],["show","API::CuentaController","API/CuentaController.html#method-i-show","()","<p>Returns a JSON object with the requested bill. REST action, works only with\nbill IDs. For other filters, …\n"],["show","API::EmpresaController","API/EmpresaController.html#method-i-show","()","<p>Returns a JSON hash with the specified company.\n"],["show","API::PagoController","API/PagoController.html#method-i-show","()","<p>Recieves a GET :id param, and returns a Pago if found.\n"],["show","API::RubroController","API/RubroController.html#method-i-show","()","<p>Returns the specified Rubro.\n"],["sign_up","AuthorizationController","AuthorizationController.html#method-i-sign_up","()","<p>Registers a user. Only admins can create new admins or company users.\n"],["transfer","API::BankAccountController","API/BankAccountController.html#method-i-transfer","()","<p>Performs the transfer API call and create a payment instance. If anything\nfails, a rollback is done. …\n"],["unpaid_bills","Client","Client.html#method-i-unpaid_bills","()","<p>Returns all the client&#39;s unpaid bills\n"],["update","API::AccountController","API/AccountController.html#method-i-update","()","<p>Not necessary\n"],["update","API::CuentaController","API/CuentaController.html#method-i-update","()",""],["update","API::EmpresaController","API/EmpresaController.html#method-i-update","()","<p>Updates a company and returns a JSON object with the updated company.\n"],["update","API::PagoController","API/PagoController.html#method-i-update","()",""],["update","API::RubroController","API/RubroController.html#method-i-update","()","<p>Modifies the specified Rubro and returns it.\n"],["users","Admin","Admin.html#method-i-users","()","<p>Admin sees users asking for password recovery.\n"],["validate_password_reset","AuthorizationController","AuthorizationController.html#method-i-validate_password_reset","()","<p>Sends instruction emails with the unique token for password reset.\n"],["welcome_email","UserMailer","UserMailer.html#method-i-welcome_email","(user, password)","<p>Welcome email send to users. Special layouts are defined for Admins and\nCompanies.\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}